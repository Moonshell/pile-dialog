{
  "name": "example",
  "version": "1.0.6",
  "scripts": {
    "install": "npm install front-custos -g",
    "build": "front-custos .",
    "build-and-upload": "front-custos . -a do_upload",
    "bnu": "npm run build-and-upload"
  },
  "fcOpt": {
    "scOpt": {
      "useRatio": "2",
      "useRem": "1"
    },
    "pcOpt": {
      "browsers": "Android > 2.3, iOS > 6.0",
      "cssnano": true
    },
    "jsOpt": {
      "bundleEntry": "js/bundle-entry.js\njs/use-vue-component.js\njs/use-react-component.js"
    },
    "ruOpt": {
      "plugins": {
        "nodeResolve": true,
        "commonJS": true,
        "babel": true,
        "vue": true,
        "postcssModules": true,
        "uglify": false
      },
      "format": "iife"
    },
    "alOpt": {
      "pageDir": "page",
      "staticDir": "static",
      "staticUrlHead": "http://example.com/{PROJECT_NAME}",
      "flatten": true,
      "hashLink": "IN_FILE_NAME",
      "useStaticUrlHead": false
    },
    "upOpt": {
      "delta": true,
      "page": "",
      "filter": "/* \n    决定某文件是否需要上传\n      可用的注入参数:\n        - console, params, config, projName, projDir, srcDir, distDir, workDir...\n        - filePath: Path of the uploading file\n        - fileStreem: Stream of the uploading file\n      查看所有可用参数:\n        - console.log(this.queryAvailableArguments();\n */\nfunction uploadFilter(filePath, projName) {     \n    // 例子: \n    //   不上传下划线开头的文件\n    return !/^_/.test(filePath); \n}",
      "form": "/* \r\n    生成文件上传的表单.\r\n      可用的注入参数:\r\n        - console, params, config, projName, projDir, srcDir, distDir, workDir...\r\n        - filePath: Path of the uploading file\r\n        - fileStreem: Stream of the uploading file\r\n      查看所有可用参数:\r\n        - console.log(this.queryAvailableArguments();\r\n */\r\nfunction uploadForm(fileStream, filePath) {\r\n    // 例子:\r\n    //   生成带有 fileDir, fileName, fileType, fileContents 四个字段的表单，其中 fileContents 为上传的文件内容\r\n    var fileDir = filePath.split('/'),\r\n        fileName = fileDir.pop().split('.'),\r\n        fileType = fileName.length > 1 ? fileName.pop() : '';\r\n    return {\r\n        'fileDir': fileDir.join('/'),\r\n        'fileName': fileName.join('.'),\r\n        'fileType': fileType,\r\n        'fileContents': fileStream\r\n    };\r\n}",
      "judge": "/*\n    判断文件上传是否成功.\n      可用的注入参数:\n        - console, params, config, projName, projDir, srcDir, distDir, workDir...\n        - filePath: Path of the uploading file\n        - fileStreem: Stream of the uploading file\n        - reponse: Reponse from the uploading server\n      查看所有可用参数:\n        - console.log(this.queryAvailableArguments();\n */\nfunction uploadJudge(response) {\n    // 例子: \n    //   根据是否返回 { status: 2 } 判断上传结果.\n    try {\n        var res = JSON.parse(response);\n        return res.status == 2;\n    } catch (e) {\n        return false;\n    }\n}"
    },
    "tasks": [
      "compile_sass",
      "prepare_build",
      "replace_const",
      "vue_php_ssr_template",
      "prefix_crafter",
      "sprite_crafter",
      "optimize_image",
      "run_csso",
      "join_include",
      "rollup_bundle",
      "allot_link",
      "do_dist"
    ],
    "innerSrcDir": "./src",
    "innerDistDir": "./dist",
    "preprocessing": "/* \n    任务开始前的预处理逻辑\n      可用的注入参数:\n        - console, params, config, projName, projDir, srcDir, distDir, workDir...\n        - filePath: Path of the uploading file\n        - fileStreem: Stream of the uploading file\n      查看所有可用参数:\n        - console.log(this.queryAvailableArguments();\n */\nfunction preprocessing(console, workDir) {\n    console.log('当前工作目录：', workDir);\n}",
    "postprocessing": "/* \n    任务结束前的处理逻辑\n      可用的注入参数:\n        - console, params, config, projName, projDir, srcDir, distDir, workDir...\n        - filePath: Path of the uploading file\n        - fileStreem: Stream of the uploading file\n      查看所有可用参数:\n        - console.log(this.queryAvailableArguments();\n */\nfunction postprocessing(console, workDir) {\n    console.log('当前工作目录：', workDir);\n}",
    "keepOldCopy": false,
    "smOpt": {
      "mappingUrl": "/*\n    传给 gulp-sourcemaps 插件 write 参数中的 \n        sourceMappingURL 字段\n */\nfunction mappingUrl(file) {\n    // return 'http://asset-host.example.com/' + file.relative + '.map';\n    return require('path').basename(file.path) + '.map';\n}",
      "enable": true
    },
    "brOpt": {
      "babelify": true,
      "vueify": true,
      "lessModulesify": true
    }
  },
  "watchToRebuilding": false
}